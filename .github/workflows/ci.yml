name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      # 1) Clonar el repositorio
      - name: Check out code
        uses: actions/checkout@v3

      # 2) Instalar Node
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3) Instalar dependencias (para ESLint y demás)
      - name: Install dependencies
        run: npm install

      # 4) Ejecutar ESLint
      - name: Run ESLint
        run: npm run lint

      # 5) Escaneo SAST con SonarCloud (versión actual recomendada)
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        with:
          args: >
            -Dsonar.projectKey=3Tenebris3_EOS-Front-End
            -Dsonar.organization=3tenebris3
            -Dsonar.sources=./src
            -Dsonar.tests=./src
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # 6) JOB para DAST
  dast-scan:
    runs-on: ubuntu-latest
    needs: build-and-analyze  # Para que este job corra después de "build-and-analyze"
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build image (multi-stage)
        run: docker build -t eos-front-end-app .

      - name: Run container
        run: docker run -d -p 8080:80 --name eos_front_end eos-front-end-app

      - name: OWASP ZAP baseline scan
        run: |
          # Escaneo rápido contra localhost:8080
          docker run --rm \
            --network host \
            -v $(pwd):/zap/wrk:rw \
            owasp/zap2docker-stable \
            zap-baseline.py \
              -t http://localhost:8080 \
              -r zap_report.html

      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

      # (Opcional) detiene el contenedor
      - name: Stop and remove container
        run: docker rm -f eos_front_end
